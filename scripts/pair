#!/usr/bin/env python
#
# Copyright 2012 Steven Le (stevenle08@gmail.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Pairs a certfiicate with a Google TV server."""

__author__ = 'stevenle08@gmail.com (Steven Le)'

import logging
import optparse
import os
import shlex
import subprocess
import sys
import googletv


def GetParser():
  """Creates an optparse.OptionParser object used by this script."""
  usage = 'Usage: %prog [--cert=<certfile>] <host> [port (default=9552)]'
  parser = optparse.OptionParser(usage=usage)
  parser.add_option(
      '--cert',
      help='Path to cert file.')
  return parser


def GenerateCert(filename, country='US', state='CA', city='Mountain View',
                 cn='anymote\/python\/googletv'):
  """Generates a self-signed certificate."""
  kwargs = {
      'city': city,
      'cn': cn,
      'country': country,
      'filename': filename,
      'state': state,
  }
  command = [
      'openssl req -x509 -nodes -days 365',
      '-subj \'/C=%(country)s/ST=%(state)s/L=%(city)s/CN=%(cn)s\'',
      '-newkey rsa:1024 -keyout %(filename)s -out %(filename)s',
  ]
  command = ' '.join(command) % kwargs
  args = shlex.split(command)
  p = subprocess.Popen(args)


def main():
  parser = GetParser()
  options, args = parser.parse_args()

  if not args:
    sys.exit(parser.usage)

  host = args[0]
  port = int(args[1]) if len(args) > 1 else 9552

  cert = options.cert or 'mycert.pem'
  if not os.path.isfile(cert):
    GenerateCert(cert)

  with googletv.PairingProtocol(host, cert, port=port) as gtv:
    print 'Initiating pairing...'
    print gtv


if __name__ == '__main__':
  main()
